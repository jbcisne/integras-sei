# Namespaced variables used by phptools

# The project directory including the phptools
phptools.project.dir                    = ${basedir}

# Temporary properties:
# Ant doesn't allow nested properties within filters, so to
# achieve this, we copy the expanded properties to a temporary file and then use this
# for filtering
phptools.properties.tmp.dir             = /tmp/
phptools.properties.tmp.file            = ${ant.project.name}.phptools.properties
phptools.properties.tmp                 = ${phptools.properties.tmp.dir}/${phptools.properties.tmp.file}

# The source directory for the site
phptools.srcdir                         = ${phptools.project.dir}/br

# The composer vendor directory for the site
phptools.vendordir                      = ${phptools.project.dir}/vendor

# The directory where all the php tools (phpunit, phpmd, etc) should be found.
#phptools.bindir                         = ${phptools.vendordir}/bin
phptools.bindir                         = /us/bin

# The build directory
phptools.builddir                       = ${phptools.project.dir}/QS-Config/output

# The distribution directory. Used for copying/filtering templates for phpunit, behat, etc
phptools.distdir                        = ${phptools.basedir}/dist

# The log directory
phptools.logdir                         = ${phptools.builddir}/logs

#
phptools.parallel                       = true
phptools.threadcount                    = 2

phptools.phpdox.phar.path               = ${phptools.bindir}
phptools.phpdox.phar.file               = phpdox
phptools.phpdox.phar                    = ${phptools.phpdox.phar.path}/${phptools.phpdox.phar.file}
phptools.phpdox.dir                     = ${phptools.builddir}/api
phptools.phpdox.enrichdir               = ${phptools.logdir}
phptools.phpdox.dist.path               = ${phptools.distdir}
phptools.phpdox.dist.file               = phpdox.xml.dist
phptools.phpdox.dist                    = ${phptools.phpdox.dist.path}/${phptools.phpdox.dist.file}
phptools.phpdox.config.path             = ${phptools.builddir}
phptools.phpdox.config.file             = phpdox.xml
phptools.phpdox.config                  = ${phptools.phpdox.config.path}/${phptools.phpdox.config.file}
phptools.phpdox.output                  = ${phptools.phpdox.dir}/docs
phptools.phpdox.dot                     = /usr/bin/dot
phptools.phpdox.todofile                = todolist.txt
phptools.phpdox.srcdir                  = ${phptools.srcdir}
phptools.phpdox.workdir                 = ${phptools.phpdox.dir}/xml
phptools.phpdox.templates               = ${phptools.vendordir}/theseer/phpdox/templates/html
phptools.phpdox.failonerror             = false
phptools.phpdox.echolevel               = verbose

phptools.phpunit.phar.path              = ${phptools.bindir}
phptools.phpunit.phar.file              = phpunit
phptools.phpunit.phar                   = ${phptools.phpunit.phar.path}/${phptools.phpunit.phar.file}
phptools.phpunit.testdir                = ${phptools.project.dir}/tests
phptools.phpunit.srcdir                 = ${phptools.srcdir}

phptools.phpunit.bootstrap.path         = ${phptools.phpunit.testdir}
phptools.phpunit.bootstrap.file         = bootstrap.php
phptools.phpunit.bootstrap              = ${phptools.phpunit.bootstrap.path}/${phptools.phpunit.bootstrap.file}
phptools.phpunit.autoload               =  __DIR__ . '/../vendor/autoload.php'
phptools.phpunit.coverage.path          = ${phptools.builddir}
phptools.phpunit.coverage.name          = coverage
phptools.phpunit.coverage               = ${phptools.phpunit.coverage.path}/${phptools.phpunit.coverage.name}

phptools.phpunit.junit.path             = ${phptools.phpdox.enrichdir}
phptools.phpunit.junit.file             = junit.xml
phptools.phpunit.junit                  = ${phptools.phpunit.junit.path}/${phptools.phpunit.junit.file}

phptools.phpunit.clover.path            = ${phptools.phpdox.enrichdir}
phptools.phpunit.clover.file            = clover.xml
phptools.phpunit.clover                 = ${phptools.phpunit.clover.path}/${phptools.phpunit.clover.file}

phptools.phpunit.dist.bootstrap.path    = ${phptools.distdir}
phptools.phpunit.dist.bootstrap.file    = bootstrap.php.dist
phptools.phpunit.dist.bootstrap         = ${phptools.phpunit.dist.bootstrap.path}/${phptools.phpunit.dist.bootstrap.file}

phptools.phpunit.dist.config.path       = ${phptools.distdir}
phptools.phpunit.dist.config.file       = phpunit.xml.dist
phptools.phpunit.dist.config            = ${phptools.phpunit.dist.config.path}/${phptools.phpunit.dist.config.file}
phptools.phpunit.config.path            = ${phptools.phpunit.testdir}
phptools.phpunit.config.file            = phpunit.xml
phptools.phpunit.config                 = ${phptools.phpunit.config.path}/${phptools.phpunit.config.file}
phptools.phpunit.failonerror            = true
phptools.phpunit.echolevel              = verbose

phptools.behat.phar.path                = ${phptools.bindir}
phptools.behat.phar.file                = behat
phptools.behat.phar                     = ${phptools.behat.phar.path}/${phptools.behat.phar.file}

phptools.behat.dist.config.path         = ${phptools.distdir}
phptools.behat.dist.config.file         = behat.yml.dist
phptools.behat.dist.config              = ${phptools.behat.dist.config.path}/${phptools.behat.dist.config.file}

phptools.behat.config.path              = ${phptools.project.dir}
phptools.behat.config.file              = behat.yml
phptools.behat.config                   = ${phptools.behat.config.path}/${phptools.behat.config.file}

phptools.behat.features.path            = ${phptools.project.dir}
phptools.behat.features.name            = features
phptools.behat.features                 = ${phptools.behat.features.path}/${phptools.behat.features.name}

phptools.behat.bootstrap.path           = %behat.paths.features%
phptools.behat.bootstrap.name           = bootstrap
phptools.behat.bootstrap                = ${phptools.behat.bootstrap.path}/${phptools.behat.bootstrap.name}

phptools.behat.format                   = html
phptools.behat.report.path              = ${phptools.builddir}/reports
phptools.behat.report.file              = report.html
phptools.behat.report                   = ${phptools.behat.report.path}/${phptools.behat.report.file}
phptools.behat.srcdir                   = ${phptools.srcdir}
phptools.behat.failonerror              = true
phptools.behat.echolevel                = verbose

phptools.phpspec2.phar.path             = ${phptools.bindir}
phptools.phpspec2.phar.file             = phpspec
phptools.phpspec2.phar                  = ${phptools.phpspec2.phar.path}/${phptools.phpspec2.phar.file}
phptools.phpspec2.spec.path             = ${phptools.project.dir}
phptools.phpspec2.spec.name             = spec
phptools.phpspec2.specs                 = ${phptools.phpspec2.spec.path}/${phptools.phpspec2.spec.name}
phptools.phpspec2.failonerror           = true
phptools.phpspec2.echolevel             = verbose
phptools.phpspec2.log.path              = ${phptools.logdir}
phptools.phpspec2.log.file              = phpspec.xml
phptools.phpspec2.log                   = ${phptools.phpspec2.log.path}/${phptools.phpspec2.log.file}

phptools.phpcpd.phar.path               = ${phptools.bindir}
phptools.phpcpd.phar.file               = phpcpd
phptools.phpcpd.phar                    = ${phptools.phpcpd.phar.path}/${phptools.phpcpd.phar.file}
phptools.phpcpd.log.path                = ${phptools.logdir}
phptools.phpcpd.log.file                = pmdcpd.xml
phptools.phpcpd.log                     = ${phptools.phpcpd.log.path}/${phptools.phpcpd.log.file}
phptools.phpcpd.srcdir                  = ${phptools.srcdir}
phptools.phpcpd.failonerror             = false
phptools.phpcpd.echolevel               = verbose

phptools.phpmd.phar.path                = ${phptools.bindir}
phptools.phpmd.phar.file                = phpmd
phptools.phpmd.phar                     = ${phptools.phpmd.phar.path}/${phptools.phpmd.phar.file}
phptools.phpmd.srcdir                   = ${phptools.srcdir}
phptools.phpmd.format                   = xml
phptools.phpmd.dist.path                = ${phptools.distdir}
phptools.phpmd.dist.file                = phpmd.xml.dist
phptools.phpmd.dist                     = ${phptools.phpmd.dist.path}/${phptools.phpmd.dist.file}
phptools.phpmd.config.path              = ${phptools.builddir}
phptools.phpmd.config.file              = phpmd.xml
phptools.phpmd.config                   = ${phptools.phpmd.config.path}/${phptools.phpmd.config.file}

phptools.phpmd.reportfile.path          = ${phptools.phpdox.enrichdir}
phptools.phpmd.reportfile.file          = pmd.xml
phptools.phpmd.reportfile               = ${phptools.phpmd.reportfile.path}/${phptools.phpmd.reportfile.file}

phptools.phpmd.rulesets                 = ${phptools.vendordir}/phpmd/phpmd/src/main/resources/rulesets
phptools.phpmd.failonerror              = false
phptools.phpmd.echolevel               = verbose

phptools.pdepend.phar.path              = ${phptools.bindir}
phptools.pdepend.phar.file              = pdepend
phptools.pdepend.phar                   = ${phptools.pdepend.phar.path}/${phptools.pdepend.phar.file}
phptools.pdepend.srcdir                 = ${phptools.srcdir}
phptools.pdepend.path                   = ${phptools.builddir}/pdepend
phptools.pdepend.xml.path               = ${phptools.logdir}
phptools.pdepend.xml.file               = jdepend.xml
phptools.pdepend.xml                    = ${phptools.pdepend.xml.path}/${phptools.pdepend.xml.file}
phptools.pdepend.chart.path             = ${phptools.pdepend.path}
phptools.pdepend.chart.file             = dependencies.svg
phptools.pdepend.chart                  = ${phptools.pdepend.chart.path}/${phptools.pdepend.chart.file}
phptools.pdepend.overview-pyramid.path  = ${phptools.pdepend.path}
phptools.pdepend.overview-pyramid.file  = overview-pyramid.svg
phptools.pdepend.overview-pyramid       = ${phptools.pdepend.overview-pyramid.path}/${phptools.pdepend.overview-pyramid.file}
phptools.pdepend.failonerror            = false
phptools.pdepend.echolevel              = verbose

phptools.phploc.phar.path               = ${phptools.bindir}
phptools.phploc.phar.file               = phploc
phptools.phploc.phar                    = ${phptools.phploc.phar.path}/${phptools.phploc.phar.file}
phptools.phploc.csv.path                = ${phptools.builddir}
phptools.phploc.csv.file                = phploc.csv
phptools.phploc.csv                     = ${phptools.phploc.csv.path}/${phptools.phploc.csv.file}
phptools.phploc.srcdir                  = ${phptools.srcdir}
phptools.phploc.failonerror             = false
phptools.phploc.echolevel               = verbose

phptools.phpcs.phar.path                = ${phptools.bindir}
phptools.phpcs.phar.file                = phpcs
phptools.phpcs.phar                     = ${phptools.phpcs.phar.path}/${phptools.phpcs.phar.file}
phptools.phpcs.srcdir                   = ${phptools.srcdir}
phptools.phpcs.standard                 = PSR2
phptools.phpcs.report-format            = checkstyle
phptools.phpcs.report.path              = ${phptools.phpdox.enrichdir}
phptools.phpcs.report.file              = checkstyle.xml
phptools.phpcs.report                   = ${phptools.phpcs.report.path}/${phptools.phpcs.report.file}
phptools.phpcs.failonerror              = false
phptools.phpcs.echolevel                = verbose

phptools.phpcb.phar.path                = ${phptools.bindir}
phptools.phpcb.phar.file                = phpcb
phptools.phpcb.phar                     = ${phptools.phpcb.phar.path}/${phptools.phpcb.phar.file}
phptools.phpcb.logdir                   = ${phptools.logdir}
phptools.phpcb.output.path              = ${phptools.builddir}
phptools.phpcb.output.name              = code-browser
phptools.phpcb.output                   = ${phptools.phpcb.output.path}/${phptools.phpcb.output.name}
phptools.phpcb.srcdir                   = ${phptools.srcdir}
phptools.phpcb.failonerror              = false
phptools.phpcb.echolevel                = verbose

phptools.lint.srcdir                    = ${phptools.srcdir}
phptools.lint.unitdir                   = ${phptools.phpunit.testdir}
phptools.lint.failonerror               = true
phptools.lint.echolevel                 = verbose
